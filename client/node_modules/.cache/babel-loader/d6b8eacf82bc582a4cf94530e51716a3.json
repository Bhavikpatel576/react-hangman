{"ast":null,"code":"import _classCallCheck from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport SecretWord from '../components/secret';\nimport { startGame as _startGame, guessCharacter } from '../actions/game';\nvar url = 'http://app.linkedin-reach.io/words';\nvar path = '/api/words';\nvar param = '?difficulty=10';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      currentWord: \"\",\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/api/words' + param).then(function (response) {\n        return response.data.split(\"\\n\");\n      }).then(function (allWords) {\n        var word = allWords[Math.floor(allWords.length * Math.random())];\n        return word;\n      }).then(function (word) {\n        console.log(word);\n\n        _this2.setState({\n          currentWord: word,\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"Loading ...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Hangman Game\"), React.createElement(SecretWord, {\n        currentWord: this.state.currentWord,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    gameNumber: store.gameNumber\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    startGame: function startGame(text) {\n      dispatch(_startGame(text));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js"],"names":["React","Component","connect","axios","SecretWord","startGame","guessCharacter","url","path","param","Game","props","state","currentWord","loading","get","then","response","data","split","allWords","word","Math","floor","length","random","console","log","setState","mapStateToProps","store","gameNumber","mapDispatchToProps","dispatch","text"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,SAAS,IAATA,UAAR,EAAmBC,cAAnB,QAAwC,iBAAxC;AAEA,IAAMC,GAAG,GAAG,oCAAZ;AACA,IAAMC,IAAI,GAAG,YAAb;AACA,IAAMC,KAAK,GAAG,gBAAd;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAFc;AAMjB;;;;wCAEkB;AAAA;;AACfX,MAAAA,KAAK,CAACY,GAAN,CAAU,eAAeN,KAAzB,EACCO,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,IAApB,CAAP;AACD,OAHD,EAICH,IAJD,CAIM,UAAAI,QAAQ,EAAI;AAChB,YAAMC,IAAI,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACI,MAAT,GAAkBF,IAAI,CAACG,MAAL,EAA7B,CAAD,CAArB;AACA,eAAOJ,IAAP;AACD,OAPD,EAQCL,IARD,CAQM,UAACK,IAAD,EAAS;AACXK,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,QAAA,MAAI,CAACO,QAAL,CAAc;AACVf,UAAAA,WAAW,EAAEQ,IADH;AAEVP,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIH,OAdD;AAeH;;;6BAEO;AACJ,UAAI,KAAKF,KAAL,CAAWE,OAAf,EAAuB;AACnB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAKH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,UAAD;AACI,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,WAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAQH;;;;EA3CcZ,S;;AA8CnB,IAAM4B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADY,GAAL;AAAA,CAA7B;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtC5B,IAAAA,SAAS,EAAE,mBAAC6B,IAAD,EAAU;AAACD,MAAAA,QAAQ,CAAC5B,UAAS,CAAC6B,IAAD,CAAV,CAAR;AAA0B;AADV,GAAf;AAAA,CAA3B;;AAIA,eAAehC,OAAO,CAAC2B,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CtB,IAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios'\nimport SecretWord from '../components/secret';\nimport {startGame, guessCharacter} from '../actions/game';\n\nconst url = 'http://app.linkedin-reach.io/words'\nconst path = '/api/words'\nconst param = '?difficulty=10'\n\nclass Game extends Component {       \n    constructor(props){\n        super(props)\n        this.state = {\n            currentWord: \"\",\n            loading: true,\n        }\n    }\n\n    componentDidMount(){\n        axios.get('/api/words' + param)\n        .then(response => {\n          return response.data.split(\"\\n\")\n        })\n        .then(allWords => {\n          const word = allWords[Math.floor(allWords.length * Math.random())]\n          return word\n        })\n        .then((word)=> {\n            console.log(word)\n            this.setState({\n                currentWord: word,\n                loading: false\n            })\n        })\n    }\n\n    render(){\n        if (this.state.loading){\n            return (\n                <div>\n                    Loading ...\n                </div>\n            )\n        }\n        return (\n            <div>\n                <h1>Hangman Game</h1>\n                <SecretWord\n                    currentWord={this.state.currentWord}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = store => ({\n    gameNumber: store.gameNumber,\n})\n  \nconst mapDispatchToProps = (dispatch) => ({\n    startGame: (text) => {dispatch(startGame(text))}\n})\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(Game)"]},"metadata":{},"sourceType":"module"}