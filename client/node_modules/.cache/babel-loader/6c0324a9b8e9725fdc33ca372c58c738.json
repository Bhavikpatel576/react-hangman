{"ast":null,"code":"import _objectSpread from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Keyboard from '../components/keyboard';\nimport './game.css';\nvar url = 'http://app.linkedin-reach.io/words';\nvar path = '/api/words';\nvar param = '?difficulty=10';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n\n    _this.fetchWord = function () {\n      axios.get('/api/words' + param).then(function (response) {\n        return response.data.split(\"\\n\");\n      }).then(function (allWords) {\n        var word = allWords[Math.floor(allWords.length * Math.random())];\n        return word;\n      }).then(function (word) {\n        var wordHash = word.split(\"\").map(function (char) {\n          return {\n            character: char,\n            guessed: false\n          };\n        });\n\n        _this.setState({\n          currentWord: wordHash,\n          loading: false\n        });\n      });\n    };\n\n    _this.checkCharacter = function (char) {\n      if (_this.state.guessed.indexOf(char) === -1) {\n        _this.setState(function (prevState) {\n          return {\n            guessed: prevState.concat(char),\n            numberOfGuesses: prevState.numberOfGuesses - 1\n          };\n        });\n      }\n\n      if (_this.state.currentWord.includes(char)) {\n        _this.setState(function (prevState) {\n          return {\n            correctlyGuessed: prevState.correctlyGuessed.concat(char)\n          };\n        });\n      }\n    };\n\n    _this.checkGameWon = function (guessedChars) {\n      return guessedChars.reduce(function (winState, currentObject) {\n        return winState && currentObject.guessed;\n      }, true);\n    };\n\n    _this.handleClick = function (char, e) {};\n\n    _this.handleReset = function () {\n      _this.setState(_objectSpread({}, _this.baseState));\n    };\n\n    _this.loading = function () {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Loading..\");\n    };\n\n    _this.state = {\n      currentWord: \"\",\n      loading: true,\n      charSlots: [],\n      guessed: [],\n      correctlyGuessed: [],\n      numberOfGuesses: 6,\n      gameOver: false\n    };\n    _this.characters = \"abcdefghijklmnopqrstuvwxyz12367890\";\n    _this.baseState = _this.state;\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchWord();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return this.loading();\n      } else if (this.state.gameOver) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"The game is over\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \" check winner\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \" add button to restart game\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"game\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Hangman Game\"), React.createElement(Keyboard, {\n          guesses: this.state.guessed,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js"],"names":["React","Component","axios","Keyboard","url","path","param","Game","props","fetchWord","get","then","response","data","split","allWords","word","Math","floor","length","random","wordHash","map","char","character","guessed","setState","currentWord","loading","checkCharacter","state","indexOf","prevState","concat","numberOfGuesses","includes","correctlyGuessed","checkGameWon","guessedChars","reduce","winState","currentObject","handleClick","e","handleReset","baseState","charSlots","gameOver","characters"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\nimport Keyboard from '../components/keyboard'\nimport './game.css'\n\nconst url = 'http://app.linkedin-reach.io/words'\nconst path = '/api/words'\nconst param = '?difficulty=10'\n\nclass Game extends Component {       \n    constructor(props){\n        super(props)\n        this.state = {\n            currentWord: \"\",\n            loading: true,\n            charSlots: [],\n            guessed: [],\n            correctlyGuessed: [],\n            numberOfGuesses: 6,\n            gameOver: false\n        }\n        this.characters = \"abcdefghijklmnopqrstuvwxyz12367890\";\n        this.baseState = this.state;\n    }\n\n    fetchWord = () => {\n        axios.get('/api/words' + param)\n        .then(response => {\n          return response.data.split(\"\\n\")\n        })\n        .then(allWords => {\n          const word = allWords[Math.floor(allWords.length * Math.random())]\n          return word\n        })\n        .then((word) => {\n            const wordHash = word.split(\"\").map((char)=> ({character: char, guessed: false}))\n            this.setState({\n                currentWord: wordHash,\n                loading: false\n            })\n        })\n    }\n\n    componentDidMount(){\n        this.fetchWord();\n    }\n\n    checkCharacter = (char) => {\n        if (this.state.guessed.indexOf(char) === -1){\n            this.setState((prevState) => {\n                return {\n                    guessed: prevState.concat(char),\n                    numberOfGuesses: prevState.numberOfGuesses - 1,\n                }\n            })\n        }\n        if (this.state.currentWord.includes(char)){\n            this.setState(prevState => {\n                return {correctlyGuessed: prevState.correctlyGuessed.concat(char)}\n            })\n        }\n        \n    }\n\n    checkGameWon = (guessedChars) => {\n        return guessedChars.reduce((winState, currentObject) => {\n            return winState && currentObject.guessed;\n          }, true);\n    }\n\n    handleClick = (char, e) => {\n\n    }\n\n    handleReset = () => {\n        this.setState({...this.baseState});\n    }\n\n    loading = () => (<div>Loading..</div>)\n\n\n    render(){\n        if (this.state.loading){\n            return this.loading()\n        } else if (this.state.gameOver){\n            return (\n                <div>\n                    <div>The game is over</div>\n                    <div> check winner</div>\n                    <div> add button to restart game</div>\n                </div>\n            )\n        } else { \n            return (\n                <div className=\"game\">\n                    <h1>Hangman Game</h1>\n                    <Keyboard\n                        guesses={this.state.guessed}\n                    />\n                </div>\n            )\n        }\n    }\n}\n  \nexport default Game"]},"metadata":{},"sourceType":"module"}