{"ast":null,"code":"import _classCallCheck from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nvar url = 'http://app.linkedin-reach.io/words';\nvar path = '/api/words';\nvar param = '?difficulty=10';\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      currentWord: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/api/words' + param).then(function (response) {\n        return response.data.split(\"\\n\");\n      }).then(function (allWords) {\n        console.log(allWords.length);\n        var word = allWords[Math.random() * allWords.length];\n        return word;\n      }).then(function (word) {\n        console.log(word);\n\n        _this2.setState({\n          currentWord: word\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Game render\");\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js"],"names":["React","Component","axios","url","path","param","Game","props","state","currentWord","get","then","response","data","split","allWords","console","log","length","word","Math","random","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAG,oCAAZ;AACA,IAAMC,IAAI,GAAG,YAAb;AACA,IAAMC,KAAK,GAAG,gBAAd;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAFc;AAKjB;;;;wCAEkB;AAAA;;AACfP,MAAAA,KAAK,CAACQ,GAAN,CAAU,eAAeL,KAAzB,EACCM,IADD,CACM,UAAAC,QAAQ,EAAI;AAChB,eAAOA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,IAApB,CAAP;AACD,OAHD,EAICH,IAJD,CAIM,UAAAI,QAAQ,EAAI;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;AACE,YAAMC,IAAI,GAAGJ,QAAQ,CAACK,IAAI,CAACC,MAAL,KAAgBN,QAAQ,CAACG,MAA1B,CAArB;AACA,eAAOC,IAAP;AACD,OARD,EASCR,IATD,CASM,UAACQ,IAAD,EAAS;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AAACb,UAAAA,WAAW,EAAEU;AAAd,SAAd;AACH,OAZD;AAaH;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ;AAKH;;;;EA9BclB,S;;AAkCnB,eAAeK,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios'\n\nconst url = 'http://app.linkedin-reach.io/words'\nconst path = '/api/words'\nconst param = '?difficulty=10'\n\nclass Game extends Component {       \n    constructor(props){\n        super(props)\n        this.state = {\n            currentWord: \"\"\n        }\n    }\n\n    componentDidMount(){\n        axios.get('/api/words' + param)\n        .then(response => {\n          return response.data.split(\"\\n\")\n        })\n        .then(allWords => {\n        console.log(allWords.length)\n          const word = allWords[Math.random() * allWords.length]\n          return word\n        })\n        .then((word)=> {\n            console.log(word)\n            this.setState({currentWord: word})\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                Game render\n            </div>\n        )\n    }\n}\n\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}