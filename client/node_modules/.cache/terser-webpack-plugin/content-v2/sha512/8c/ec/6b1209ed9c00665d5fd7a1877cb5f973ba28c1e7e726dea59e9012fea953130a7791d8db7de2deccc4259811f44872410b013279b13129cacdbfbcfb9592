{"map":"{\"version\":3,\"sources\":[\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/actions/game.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/game.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/containers/list.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/components/App.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/reducers/game.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/reducers/index.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/store/configureStore.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/serviceWorker.js\",\"/Users/bhavikpatel/Programming/GitHub/randomRepos/Reach/bhavik_hangman/client/src/index.js\"],\"names\":[\"START_GAME\",\"Component\",\"List\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"getList\",\"fetch\",\"then\",\"res\",\"json\",\"list\",\"setState\",\"state\",\"react_default\",\"a\",\"createElement\",\"className\",\"length\",\"map\",\"item\",\"App\",\"handleGamePlay\",\"startGame\",\"containers_list\",\"connect\",\"store\",\"gameNumber\",\"dispatch\",\"text\",\"type\",\"initialState\",\"turn\",\"playerName\",\"correctGuesses\",\"incorrectGuesses\",\"word\",\"loading\",\"game\",\"arguments\",\"undefined\",\"action\",\"objectSpread\",\"combineReducers\",\"configureStore\",\"preloadedState\",\"createStore\",\"rootReducer\",\"window\",\"__REDUX_DEVTOOLS_EXTENSION__\",\"compose\",\"applyMiddleware\",\"thunk\",\"createLogger\",\"Boolean\",\"location\",\"hostname\",\"match\",\"render\",\"es\",\"components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"const START_GAME = \\\"START_GAME\\\";\\n\\nexport function startGame(text) {\\n    return { type: START_GAME, text }\\n}\",\"import React, {Component} from 'react';\\n\\nconst url = 'http://app.linkedin-reach.io/words'\\nconst path = '/words'\\nconst param = '?difficulty='\\n\\nclass Game extends Component {       \\n    constructor(props){\\n        super(props)\\n        this.state = {\\n            currentWord: \\\"\\\"\\n        }\\n    }\\n\\n    componentDidMount(){\\n        fetch(path, {\\n            method: 'GET'\\n        })\\n        .then((data)=>{\\n            console.log(data);\\n            var words = data.split(\\\" \\\");\\n            return words[Math.random * words.length]\\n        })\\n        .then((word)=>{\\n            this.setState({currentWord: word})\\n        })\\n    }\\n\\n    render(){\\n        return (\\n            <div>\\n                Game render\\n            </div>\\n        )\\n    }\\n}\\n\\n\\nexport default Game;\",\"import React, { Component } from 'react';\\n\\nclass List extends Component {\\n  // Initialize the state\\n  constructor(props){\\n    super(props);\\n    this.state = {\\n      list: []\\n    }\\n  }\\n\\n  // Fetch the list on first mount\\n  componentDidMount() {\\n    this.getList();\\n  }\\n\\n  // Retrieves the list of items from the Express app\\n  getList = () => {\\n    fetch('/api/getList')\\n    .then(res => res.json())\\n    .then(list => this.setState({ list }))\\n  }\\n\\n  render() {\\n    const { list } = this.state;\\n\\n    return (\\n      <div className=\\\"App\\\">\\n        <h1>List of Items</h1>\\n        {/* Check to see if any items are found*/}\\n        {list.length ? (\\n          <div>\\n            {/* Render the list of items */}\\n            {list.map((item) => {\\n              return(\\n                <div>\\n                  {item}\\n                </div>\\n              );\\n            })}\\n          </div>\\n        ) : (\\n          <div>\\n            <h2>No List Items Found</h2>\\n          </div>\\n        )\\n      }\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default List;\",\"import React, {Component} from 'react';\\nimport PropTypes from 'prop-types';\\nimport { connect } from 'react-redux';\\nimport { Welcome } from '../containers/welcome';\\nimport {startGame} from '../actions/game';\\nimport Game from '../containers/game';\\nimport List from '../containers/list';\\n\\nclass App extends Component {\\n    static propTypes = {\\n        \\n      }\\n    constructor(props){\\n        super(props)\\n    }\\n\\n    handleGamePlay = () => {\\n        this.props.startGame(\\\"Guest\\\")\\n    }\\n\\n    render(){\\n        return (\\n            <div>\\n                {/* <Welcome \\n                    startGame={this.handleGamePlay}\\n                /> */}\\n                <List/>\\n            </div>\\n        )\\n    }\\n}\\n\\nconst mapStateToProps = store => ({\\n    gameNumber: store.gameNumber,\\n})\\n  \\nconst mapDispatchToProps = (dispatch) => ({\\n    startGame: (text) => {dispatch(startGame(text))}\\n})\\n  \\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\",\"const START_GAME = \\\"START_GAME\\\";\\n\\nconst initialState = {\\n    turn: 0,\\n    playerName: \\\"\\\",\\n    gameNumber: 0,\\n    correctGuesses: [],\\n    incorrectGuesses: [],\\n    word: \\\"\\\",\\n    loading: false,\\n}\\n\\n\\nfunction game(state = initialState, action){\\n    switch (action.type){\\n        case START_GAME:\\n            return {...state, \\n                gameNumber: state.gameNumber + 1,\\n                playerName: action.text\\n            }\\n        default:\\n            return state\\n    }\\n}\\n\\nexport default game;\\n\\n\",\"import game from './game'\\nimport { combineReducers } from 'redux'\\n\\nexport default combineReducers({\\n    game\\n})\\n\",\"import { createStore, applyMiddleware, compose } from 'redux'\\nimport thunk from 'redux-thunk'\\nimport { createLogger } from 'redux-logger'\\nimport rootReducer from '../reducers'\\n\\nconst configureStore = preloadedState => {\\n  const store = createStore(\\n    rootReducer,\\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\\n    preloadedState,\\n    compose(\\n      applyMiddleware(thunk, createLogger())\\n    )\\n  )\\n\\n  return store\\n}\\n\\nexport default configureStore\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport {render} from 'react-dom';\\nimport {Provider} from 'react-redux';\\nimport ReactDOM from 'react-dom';\\nimport App from './components/App';\\nimport configureStore from './store/configureStore';\\nimport * as serviceWorker from './serviceWorker';\\n\\nconst store = configureStore();\\n\\nrender(\\n    <Provider store={store}>\\n        <App />\\n    </Provider>,\\n    document.getElementById('root')\\n)\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{125:function(e,t,n){e.exports=n(251)},251:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(22),o=n(50),i=n(25),u=n(26),l=n(28),s=n(27),m=n(29),d=(n(255),\"START_GAME\");a.Component;var b=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).getList=function(){fetch(\"/api/getList\").then(function(e){return e.json()}).then(function(e){return n.setState({list:e})})},n.state={list:[]},n}return Object(m.a)(t,e),Object(u.a)(t,[{key:\"componentDidMount\",value:function(){this.getList()}},{key:\"render\",value:function(){var e=this.state.list;return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"h1\",null,\"List of Items\"),e.length?r.a.createElement(\"div\",null,e.map(function(e){return r.a.createElement(\"div\",null,e)})):r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,\"No List Items Found\")))}}]),t}(a.Component),h=function(e){function t(e){var n;return Object(i.a)(this,t),(n=Object(l.a)(this,Object(s.a)(t).call(this,e))).handleGamePlay=function(){n.props.startGame(\"Guest\")},n}return Object(m.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,r.a.createElement(b,null))}}]),t}(a.Component),f=Object(o.b)(function(e){return{gameNumber:e.gameNumber}},function(e){return{startGame:function(t){e(function(e){return{type:d,text:e}}(t))}}})(h),O=n(20),v=n(114),E=n(115),p=n(116),g=\"START_GAME\",j={turn:0,playerName:\"\",gameNumber:0,correctGuesses:[],incorrectGuesses:[],word:\"\",loading:!1};var w=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:j,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case g:return Object(p.a)({},e,{gameNumber:e.gameNumber+1,playerName:t.text});default:return e}},_=Object(O.c)({game:w}),N=function(e){return Object(O.e)(_,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__(),e,Object(O.d)(Object(O.a)(v.a,Object(E.createLogger)())))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var y=N();Object(c.render)(r.a.createElement(o.a,{store:y},r.a.createElement(f,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[125,2,1]]]);","extractedComments":[]}